pipeline {
    agent any
    
    environment {
        GIT_CREDENTIALS_ID = 'github-credentials-id'
        REPO_URL = 'https://github.com/jeanpaulkhoury/dotnet.git'
        IMAGE_NAME = 'testcsharp'
        CONTAINER_NAME = 'testcsharp-container'
        RECIPIENT_EMAIL = 'jeanpaulkhoury1@gmail.com'
    }

    stages {
        stage('Clone repository') {
            steps {
                git credentialsId: env.GIT_CREDENTIALS_ID, url: env.REPO_URL
            }
        }
        
        stage('Build Docker Image') {
            steps {
                script {
                    // Remove any existing container with the same name
                    sh "docker rm -f ${env.CONTAINER_NAME} || true"
                    // Remove any existing image with the same name
                    sh "docker rmi ${env.IMAGE_NAME} || true"
                    // Build the new image
                    sh "docker build -t ${env.IMAGE_NAME} ."
                }
            }
        }
        
        stage('Run Docker Container') {
            steps {
                script {
                    // Run the container from the built image
                    sh "docker run --name ${env.CONTAINER_NAME} -p 5000:5000 -d ${env.IMAGE_NAME}"
                }
            }
        }
    }
    
    post {
        success {
            script {
                // Handle post-success actions here
            }
            // Optionally send a notification email on successful build
            mail to: env.RECIPIENT_EMAIL,
                 subject: "SUCCESS: Jenkins build #${BUILD_NUMBER}",
                 body: "Jenkins build #${BUILD_NUMBER} succeeded. Great job!"
        }
        failure {
            script {
                // Handle post-failure actions here
            }
            // Send a notification email on build failure
            mail to: env.RECIPIENT_EMAIL,
                 subject: "FAILURE: Jenkins build #${BUILD_NUMBER}",
                 body: "Jenkins build #${BUILD_NUMBER} failed. Please check the Jenkins logs for more details."
        }
        always {
            script {
                // Actions that should happen after every build go here
            }
        }
    }
}
